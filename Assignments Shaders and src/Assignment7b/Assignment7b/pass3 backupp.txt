uniform sampler2D Pass2;
varying vec2  texCoord;
uniform float iParamSepia;
uniform float pixelThing;

uniform float scanTimer;
uniform float noiseTimer;
uniform float scanlineSpeed;
uniform float scanlineAmounts;
uniform sampler2D noiseTexture;
uniform float fishEyePow;


void main(void)
{

   vec4 outCol=vec4(0.0,0.0,0.0,1.0);
   vec2 tex = texCoord;
   
   //FishEyeBror
    vec2 cent=vec2(0.5,0.5);
    vec2 texF=texCoord-cent;
    float distF=distance(vec2(0.0,0.0),texF);
    vec4 finalColor=texture2D(Pass2,cent+(texF*pow(distF,fishEyePow)));
   //endOfFishEyeBror
   
   // Compute Luminance
   vec3  LuminanceWeights = vec3(0.299,0.587,0.114);   
   vec3  texColor=finalColor.xyz;//texture2D(Pass2,texCoord).xyz;                                                                               
   float luminance = dot(texColor,LuminanceWeights.xyz);
 
  // Sepia
   outCol.xyz = mix(vec3(luminance*1.2,luminance*1.0,luminance*0.8),texColor,iParamSepia);
  
   //pixelation
   tex.x=floor((tex.x*pixelThing)+0.5)/pixelThing;
   tex.y=floor((tex.y*pixelThing)+0.5)/pixelThing;
 
   outCol.xyz*=texture2D(Pass2,tex).xyz *2;   
   
   //SCANLINES
   outCol.xyz*=abs(sin((texCoord.y*scanlineAmounts)+(scanTimer*scanlineSpeed)));        
   //ENDOFSCANLINES
   
   //NOISESTUFF  
   luminance = dot(outCol.xyz,LuminanceWeights.xyz);
   vec2 vv=vec2(texCoord.x+(noiseTimer*80.0),texCoord.y+(noiseTimer*155.0));
   outCol.xyz += mix(texture2D(noiseTexture,vv*2.0).xyz,outCol.xyz,luminance);
   //ENDOFNOISESTUFF
   
   
   

   gl_FragColor = outCol ;   
}
